{"version":3,"sources":["components/Card/Card.js","components/Board/Board.js","components/InfoModal/InfoModal.js","App.js","serviceWorker.js","index.js"],"names":["card","props","quarterCard","className","style","width","title","subtitle","assignments","activeQuarterCard","borderColor","cardStyleResult","activeQuarterNumber","id","board","activeQuarter","quarter1","map","el","index","key","Math","random","type","onClick","deleteItem","quarter2","quarter3","quarter4","infoModal","height","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","App","inputHandler","event","setState","currentInput","target","value","deleteItemHandler","itemIndex","quarterNumber","assignmentsArray","JSON","parse","localStorage","getItem","splice","setItem","stringify","activeQuarterHandler","addAssignmentHandler","state","assignmentString","push","this","InfoModal","placeholder","onChange","bind","length","number","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db52f460.chunk.js","sourcesContent":["import React from 'react';\r\nimport CardStyle from './Card.css';\r\n\r\nconst card = (props) => {\r\n  const quarterCard = (\r\n    <div className=\"card CardStyle\" style={{width: '100%'}}>\r\n     <div className=\"card-body\">\r\n       <b className=\"card-title\">{props.title}</b>\r\n       <h6 className=\"card-subtitle mb-2 mt-5\">{props.subtitle}</h6>\r\n       <p className=\"card-text mt-5 \">You have {props.assignments} assignments</p>\r\n     </div>\r\n    </div>\r\n  );\r\n  const activeQuarterCard = (\r\n    <div className=\"card CardStyle\" style={{width: '100%', borderColor:'#FF6347'}}>\r\n     <div className=\"card-body\">\r\n       <b className=\"card-title\">{props.title}</b>\r\n       <h6 className=\"card-subtitle mb-2 mt-5\">{props.subtitle}</h6>\r\n       <p className=\"card-text mt-5 \">You have {props.assignments} assignments</p>\r\n     </div>\r\n    </div>\r\n  );\r\n\r\n  const cardStyleResult = props.activeQuarterNumber == props.id ? activeQuarterCard : quarterCard\r\n\r\n  return <>{cardStyleResult}</>\r\n}\r\n\r\nexport default card;\r\n","import React from 'react';\r\nimport './Board.css';\r\n\r\nconst board = (props) => {\r\n  if (props.activeQuarter === 1) {\r\n    return(\r\n      <ul className='Board bg-light text-dark p-0'>\r\n        {props.quarter1.map((el,index) =>\r\n          <li key={el + Math.random()}\r\n              className=\"d-flex justify-content-between align-items-end pt-1 mx-2 border-bottom\">\r\n            {el}\r\n            <button type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    onClick={props.deleteItem(index,'quarter_1')}>X</button>\r\n          </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n  if (props.activeQuarter === 2) {\r\n    return(\r\n      <ul className='Board bg-light text-dark p-0'>\r\n        {props.quarter2.map((el,index) =>\r\n          <li key={el + Math.random()}\r\n              className=\"d-flex justify-content-between align-items-end pt-1 mx-2 border-bottom\">\r\n            {el}\r\n            <button type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    onClick={props.deleteItem(index,'quarter_2')}>X</button>\r\n          </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n  if (props.activeQuarter === 3) {\r\n    return(\r\n      <ul className='Board bg-light text-dark p-0'>\r\n        {props.quarter3.map((el,index) =>\r\n          <li key={el + Math.random()}\r\n              className=\"d-flex justify-content-between align-items-end pt-1 mx-2 border-bottom\">\r\n            {el}\r\n            <button type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    onClick={props.deleteItem(index,'quarter_3')}>X</button>\r\n          </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n  if (props.activeQuarter === 4) {\r\n    return(\r\n      <ul className='Board bg-light text-dark p-0'>\r\n        {props.quarter4.map((el,index) =>\r\n          <li key={el + Math.random()}\r\n              className=\"d-flex justify-content-between align-items-end pt-1 mx-2 border-bottom\">\r\n            {el}\r\n            <button type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    onClick={props.deleteItem(index,'quarter_4')}>X</button>\r\n          </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n  return  <ul className='Board bg-light text-dark'></ul>\r\n}\r\n\r\nexport default board;\r\n","import React from 'react';\r\n\r\nconst infoModal = () => {\r\n\r\n  return(\r\n    <>\r\n        <button type=\"button\" className=\"btn btn-info btn-sm\" style={{height: '4em'}} data-toggle=\"modal\" data-target=\"#exampleModalScrollable\">\r\n          <i className=\"fas fa-info-circle fa-3x\"></i>\r\n        </button>\r\n\r\n        <div className=\"modal fade\" id=\"exampleModalScrollable\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalScrollableTitle\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalScrollableTitle\">Get Started</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n                  <div className=\"modal-body\">\r\n                   Welcome to your time management app!\r\n                   Working with it couldn't be simpler.\r\n                   <br/>\r\n                   The app was built to help entrepreneurs manage\r\n                   their time and tasks more effectively.\r\n                   <br/>\r\n                   Ok, so how does it work?\r\n                   <br/>\r\n                   Ever one of the four quarters on the screen represent the assignments definition:<br/>\r\n                   quarter 1 represent \"Important & Urgent\".<br/>\r\n                   quarter 2 represent \"Important & Not urgent\".<br/>\r\n                   quarter 3 represent \"Not Important & Urgent\".<br/>\r\n                   quarter 4 represent \"Not Important & Not urgent\".<br/>\r\n                   <br/>\r\n                   Click on the quarter to see the assignments that he contains.\r\n                   <br/><br/>            \r\n                   At the top right of the screen there is an input line and four\r\n                   different buttons.\r\n                   Enter the assignment description in the input bar and classify it into\r\n                   one of the quarters using the appropriate button.\r\n                   <br/>\r\n                   Assignments can be added and deleted, the number of the current\r\n                   assignments number appears on each card.\r\n                   <br/>\r\n                   The app is responsive and can be used on mobile devices as well!\r\n                   <br/>\r\n                   So, Without unnecessary talks let's get to started!\r\n                   <br/>\r\n                  </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-info\" data-dismiss=\"modal\">Got It!</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default infoModal\r\n","import React, { Component } from 'react';\nimport Card from './components/Card/Card';\nimport Board from './components/Board/Board';\nimport InfoModal from './components/InfoModal/InfoModal';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n      this.state = {\n          currentInput: '',\n          activeQuarterNumber: null,\n          quarter1: [],\n          quarter2: [],\n          quarter3: [],\n          quarter4: []\n      }\n    }\n\n    inputHandler = event => this.setState({currentInput: event.target.value})\n\n    deleteItemHandler = (itemIndex, quarterNumber) => {\n      if (quarterNumber === 'quarter_1')\n      {\n        let assignmentsArray = JSON.parse(localStorage.getItem(\"quarter_1\"))\n        assignmentsArray.splice(itemIndex, 1)\n        localStorage.setItem(\"quarter_1\", JSON.stringify(assignmentsArray))\n        this.setState({quarter1: assignmentsArray})\n      }\n      if (quarterNumber === 'quarter_2')\n      {\n        let assignmentsArray = JSON.parse(localStorage.getItem(\"quarter_2\"))\n        assignmentsArray.splice(itemIndex, 1)\n        localStorage.setItem(\"quarter_2\", JSON.stringify(assignmentsArray))\n        this.setState({quarter2: assignmentsArray})\n      }\n      if (quarterNumber === 'quarter_3')\n      {\n        let assignmentsArray = JSON.parse(localStorage.getItem(\"quarter_3\"))\n        assignmentsArray.splice(itemIndex, 1)\n        localStorage.setItem(\"quarter_3\", JSON.stringify(assignmentsArray))\n        this.setState({quarter3: assignmentsArray})\n      }\n      if (quarterNumber === 'quarter_4')\n      {\n        let assignmentsArray = JSON.parse(localStorage.getItem(\"quarter_4\"))\n        assignmentsArray.splice(itemIndex, 1)\n        localStorage.setItem(\"quarter_4\", JSON.stringify(assignmentsArray))\n        this.setState({quarter4: assignmentsArray})\n      }\n    }\n\n    activeQuarterHandler = (quarterNumber) => {\n      if (quarterNumber === 'quarter_1')\n        this.setState({activeQuarterNumber: 1})\n      if (quarterNumber === 'quarter_2')\n        this.setState({activeQuarterNumber: 2})\n      if (quarterNumber === 'quarter_3')\n        this.setState({activeQuarterNumber: 3})\n      if (quarterNumber === 'quarter_4')\n        this.setState({activeQuarterNumber: 4})\n    }\n\n    addAssignmentHandler = (quarterNumber) => {\n      if (quarterNumber === 'quarter_1' && this.state.currentInput!=='') {\n        let assignmentString = this.state.currentInput;\n        let assignmentsArray = [...this.state.quarter1]\n        assignmentsArray.push(assignmentString)\n        this.setState({quarter1: assignmentsArray})\n        assignmentString = ''\n        this.setState({currentInput: assignmentString})\n        localStorage.setItem(\"quarter_1\", JSON.stringify(assignmentsArray))\n      }\n      if (quarterNumber === 'quarter_2' && this.state.currentInput!=='') {\n        let assignmentString = this.state.currentInput;\n        let assignmentsArray = [...this.state.quarter2]\n        assignmentsArray.push(assignmentString)\n        this.setState({quarter2: assignmentsArray})\n        assignmentString = ''\n        this.setState({currentInput: assignmentString})\n        localStorage.setItem(\"quarter_2\", JSON.stringify(assignmentsArray))\n      }\n      if (quarterNumber === 'quarter_3' && this.state.currentInput!=='') {\n        let assignmentString = this.state.currentInput;\n        let assignmentsArray = [...this.state.quarter3]\n        assignmentsArray.push(assignmentString)\n        this.setState({quarter3: assignmentsArray})\n        assignmentString = ''\n        this.setState({currentInput: assignmentString})\n        localStorage.setItem(\"quarter_3\", JSON.stringify(assignmentsArray))\n      }\n      if (quarterNumber === 'quarter_4' && this.state.currentInput!=='') {\n        let assignmentString = this.state.currentInput;\n        let assignmentsArray = [...this.state.quarter4]\n        assignmentsArray.push(assignmentString)\n        this.setState({quarter4: assignmentsArray})\n        assignmentString = ''\n        this.setState({currentInput: assignmentString})\n        localStorage.setItem(\"quarter_4\", JSON.stringify(assignmentsArray))\n      }\n    }\n\n    UNSAFE_componentWillMount () {\n      localStorage.getItem(\"quarter_1\") && this.setState({quarter1: JSON.parse(localStorage.getItem(\"quarter_1\"))})\n      localStorage.getItem(\"quarter_2\") && this.setState({quarter2: JSON.parse(localStorage.getItem(\"quarter_2\"))})\n      localStorage.getItem(\"quarter_3\") && this.setState({quarter3: JSON.parse(localStorage.getItem(\"quarter_3\"))})\n      localStorage.getItem(\"quarter_4\") && this.setState({quarter4: JSON.parse(localStorage.getItem(\"quarter_4\"))})\n    }\n\n  render() {\n    return (\n          <>\n            <div className='container'>\n              <div className='row'>\n                 <div className=\"col-12 d-flex justify-content-center col-sm-6 d-sm-flex justify-content-sm-start align-items-sm-center p-sm-0\">\n                   <InfoModal />\n                 </div>\n                 <div className=\"col-12 col-sm-6 d-sm-flex justify-content-sm-end p-sm-0\">\n                   <div className=\"my-2 box-sizing: border-box p-0\">\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter new assignment\" onChange={this.inputHandler} value={this.state.currentInput} />\n                         <div className=\"input-group-append justify-content-between mt-1\" id=\"button-addon4\">\n                            <button className=\"btn btn-info mr-1\" onClick={() => this.addAssignmentHandler('quarter_1')}>Quarter 1</button>\n                            <button className=\"btn btn-info mr-1\" onClick={() => this.addAssignmentHandler('quarter_2')}>Quarter 2</button>\n                            <button className=\"btn btn-info mr-1\" onClick={this.addAssignmentHandler.bind(this,'quarter_3')}>Quarter 3</button>\n                            <button className=\"btn btn-info\" onClick={this.addAssignmentHandler.bind(this,'quarter_4')}>Quarter 4</button>\n                         </div>\n                    </div>\n                 </div>\n              </div>\n            </div>\n\n               <div className='container'>\n                <div className='row'>\n                          <div className='col-md-6'>\n                             <div className='row'>\n                                <div className='col-md-6 p-0' onClick={() => this.activeQuarterHandler('quarter_1')}>\n                                <Card title='Important & Urgent'\n                                      id = '1'\n                                      subtitle='Quarter 1'\n                                      assignments={this.state.quarter1.length}\n                                      activeQuarterNumber={this.state.activeQuarterNumber} />\n                                </div>\n                                <div className='col-md-6 p-0' onClick={() => this.activeQuarterHandler('quarter_2')}>\n                                <Card title='Important & Not urgent'\n                                      id = '2'\n                                      subtitle='Quarter 2'\n                                      assignments={this.state.quarter2.length}\n                                      activeQuarterNumber={this.state.activeQuarterNumber}/>\n                                </div>\n                             </div>\n               <div className='row'>\n                             <div className='col-md-6 p-0' onClick={() => this.activeQuarterHandler('quarter_3')}>\n                                 <Card title='Not Important & Urgent'\n                                       id = '3'\n                                       subtitle='Quarter 3'\n                                       assignments={this.state.quarter3.length}\n                                       activeQuarterNumber={this.state.activeQuarterNumber}/>\n                                 </div>\n                             <div className='col-md-6 p-0' onClick={() => this.activeQuarterHandler('quarter_4')}>\n                                 <Card title='Not Important & Not urgent'\n                                       id = '4'\n                                       subtitle='Quarter 4'\n                                       assignments={this.state.quarter4.length}\n                                       activeQuarterNumber={this.state.activeQuarterNumber}/>\n                                 </div>\n                              </div>\n                           </div>\n                       <div className='col-md-6 pl-md-2 mt-md-0 px-0 mt-2'>\n                          <Board quarter1={this.state.quarter1}\n                                 quarter2={this.state.quarter2}\n                                 quarter3={this.state.quarter3}\n                                 quarter4={this.state.quarter4}\n                                 activeQuarter = {this.state.activeQuarterNumber}\n                                 deleteItem= {(index , number) => this.deleteItemHandler.bind(this, index,number)} />\n                       </div>\n                  </div>\n               </div>\n            </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}